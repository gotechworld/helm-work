---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "symfony.fullname" . }}-nginx
  labels:
    app: {{ template "symfony.fullname" . }}
  annotations:
    "helm.sh/hook": pre-install, pre-upgrade
    "helm.sh/hook-weight": "-3"
    "helm.sh/hook-delete-policy": before-hook-creation
data:
  nginx.conf: |
    user  www-data;
    worker_processes 4;
    pid /run/nginx.pid;
    daemon off;

    events {
      worker_connections  2048;
      multi_accept on;
      use epoll;
    }

    http {
      server_tokens off;
      sendfile on;
      tcp_nopush on;
      tcp_nodelay on;
      keepalive_timeout {{ .Values.nginx.keepaliveTimeout | default "15" }};
      types_hash_max_size 2048;
      #client_max_body_size 20M;
      client_max_body_size 100M;
      client_body_buffer_size {{ .Values.nginx.clientBodyBufferSize | default "1M" }};
      client_body_in_file_only off;
      client_body_in_single_buffer on;
      include /etc/nginx/mime.types;
      default_type application/octet-stream;
      log_format custom escape=none '$http_host $remote_addr [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" $request_time "$http_x_forwarded_for" "$http_cf_connecting_ip" "$http_x_request_id" "$upstream_http_customer_id" "$upstream_http_route"';

      access_log /dev/stdout custom;
      error_log /dev/stderr;

      gzip  on;
      gzip_disable "msie6";
      gzip_comp_level 6;
      gzip_min_length 1100;
      gzip_buffers 16 8k;
      gzip_proxied any;
      gzip_types text/plain text/css text/js text/xml text/javascript application/javascript application/x-javascript application/json application/xml application/xml+rss;

      server {

          listen 80 default_server;

          server_name _;
          root /var/www/public;
          index index.php index.html index.htm;
          
          location / {
              try_files $uri /index.php$is_args$args;
          }

          location ~ ^/index\.php(/|$) {
              fastcgi_pass unix:/run/php-fpm.sock;
              fastcgi_split_path_info ^(.+\.php)(/.*)$;
              include fastcgi_params;
              fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
              fastcgi_param DOCUMENT_ROOT $realpath_root;
              internal;
          }
          location ~ \.php$ {
              return 404;
          }
          }
      }
    
